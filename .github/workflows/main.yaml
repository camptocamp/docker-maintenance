name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]'
    tags:
      - '*'
  pull_request:

permissions:
  contents: write
  packages: write

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    outputs:
      success: ${{ steps.success.outputs.success }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: python3 -m pip install --requirement=ci/requirements.txt

      - name: Print environment information
        run: c2cciutils-env

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files --color=always
      - run: git diff --exit-code --patch > /tmp/pre-commit.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Apply pre-commit fix.patch
          path: /tmp/pre-commit.patch
          retention-days: 1
        if: failure()

      - id: success
        run: echo "::set-output name=success::true"

  main:
    name: Continuous integration
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    needs: pre-commit
    if: always()

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: python3 -m pip install --requirement=ci/requirements.txt

      - run: make build

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
          patterns: docker
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - name: Publish
        run: tag-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Update dpkg versions list.patch
          path: /tmp/dpkg-versions.patch
          retention-days: 1
        if: failure()

      - run: '[[ "${{ needs.pre-commit.outputs.success }}" == "true" ]]'
